ATTACK PHASE:
    1)Intesify the genuine requests when the attack is running, to get more points. 
    (see if it's possible to notify the genuine script changing a value in a shared file, to intensificate the requests when the attack is running)
    2) Try Slow-norris attack (DOS)
    3) Try brute force username,password.
    4) SYN flooding to the legitimate client using spoofed IP (src IP = server IP) -> SYN-ACK flooding done by the legitimate client.
    5) In the initial stage of the attack, flooding the server with ACK packets until they apply iptables rules to reject unrelated packets.
    6) Flooding using crafted IP packets with spoofed IP (src IP = server IP) with TTL=2. When it reaches the gateway, it will send ICMP packet to the server.
        This should elude an eventual rate_filter rule because is the gateway to DoS the server.
    7) Run a nmap scan to detect any service left open (sudo nmap -a 10.1.5.2/10.1.5.1/10.1.1.3).
    8) Block with iptables evenutal RST from the defenders.
    9) Do the best to make the request look like legit requests (Maybe answer also to syn-ack to trick the server). 
    10) Flood with HTTP requests with src_addr=10.1.5.0/24 to generate ARP requests in their network.

DEFENSE PHASE:
    1) Enable FW in gateway and server 
        allow http[80] from clients network and from gw (for test purpose)
        and ssh[22] only from deterlab
    2) Enable syncookies to avoid syn flood attacks
    3) Enable defense modules for apache2 (libapache2-mod-evasive). (https://phoenixnap.com/kb/apache-mod-evasive)
    4) Install snort in inline mode in gateway machine.
        Anomaly detection, track by_scr and see if client is sending more than 1 request per second (block).
    5) Drop all ingoing ICMP packets on the server except from gw.
    6) Check all the open ports (what service is running on each open port).
    7) Optimize apache threads for the available memory ((tot_memory*1024)/average_weight_apache2_process)-memory_other_programs
        ps -ylC apache2 --sort:rss
    8) Drop all traffic on gateway interface 10.1.1.3 where source address = server address -> prevent spoofing
    9) On the gateway, drop all traffic with sourceIP=10.1.5.0/24 on the gateway interface 10.1.1.3 -> prevent ARP flooding internally
    10) On the gateway, drop ssh traffic on interface 10.1.1.3