Useful defense commands
    1. who => checks for logged in users (in case of breaches).
    2. netstat -antp => check for suspicious stuff in active network connections.
        If anything is found close it with sudo kill <pid>
    3. netstat -la => check for currently listening and active ports in the system.
    4. last => checks for the record of logged in users.
    5. cat .bash_history => check bash activities and commands the users have run.
    6. crontab -l => check cron tabs for traces of reverse shells etc.
        ls -la /etc/cron.<daily, hourly, weekly> => check for time-repeat cron jobs.
    7. ps auxf => check for running processes. Kill everything that seems suspicious.
    8. cat /etc/passwd => check if suspicious user is added here.
    9. find / -mtime -o -ctime 1 => check for files modifies in the last day for anything suspicious.
    10. find / -perm -4000 -user root -type f => find suid files owned by root for suspicious activities.
    11. find / -perm -6000 -type f => find sigid files owned by root for suspicious acitivies.
    12. install chrootkit in order to detect rootkits.
        sudo apt install chrootkit
        sudo chrootkit => check if anything is out of the ordinary.
    13. Check log files in /var/log for anything suspicious.
        Use syslog to view log information.
    14. cat auth.log | less => logs for authentication attempts.
    15. cat kern | less => kernel logs.
    16. cat faillog | less => data on unsuccessful login attempts. Useful for finding knowledge on attempted
        security penetrations.
    17. cat cron | less => cron related messages.
    18. cat httpd | less => logs for apache2
    19. ss | grep ssh => check for active ssh connections
        If anything suspicious is found: sudo kill <pid of ssh session>