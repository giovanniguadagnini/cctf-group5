ATTACK PHASE:
    1) Evaluate the performace when the script have to download from the db data relative to a lot of operations.
    2) Evaluate if it's possible to exploit the fact that transactions are not used to corrupt the db.
    3) Evaluate if it's possible to use the log against the server memory, a lot of request -> log file becomes very big.
    4) Overflow the type in the database.
    5) Create an account, do a lot of deposit and then request a lot of time the balance.
    6) Check if mass creating users could stop the databse from operating properly.
    7) Try to DoS the server's resources opening lots of database connections
    8) Fill the request.log file with lot of junk.
    9) Prepare list of payload to test.

DEFENSE PHASE:
    0) Reuse iptables rules created for resilient_cctf. 
    1) Evaluate to change the mysql root password.
    2) Since flooding tecnique is not allowed evaluate if could be interesting to use Snort to detect and block eventual attacks.
    3) Allow users to access the db also without root privileges (the installation allow access only with root privileges and without password).
    4) Create an account with less privilege to be used in the php webapplication (select, update, insert only on the two tables).
    5) Check username password when the user is already present in the system.
    6) Use prepared statement to avoid sql injection.
    7) Sanitize data retrieved from the db before print them on the page (?).
    8) Check the value to be added is an integer (not binary or hex).
    9) Hash the password (be sure digest is smaller than len of the db field).
    10) Rewrite balance function to avoid slowdowns when computing the balance for the check before witdraw or deposit operation.
    11) Ask if it's ok to modify the balance function (it's too slow).
    12) Modified php script to use paginated version of the list of the transactions.
    13) No need to check that total balance is bigger than max_int since sql is casting the sum to the appropriate variable.
    14) Check size of all the types before adding to the db.
    15) Add slow loris protection.

FOR THE DEBUGG:
error_reporting(E_ALL);
ini_set('display_errors','On');

To connect to website from our pc:
ssh -L 8888:<pc_name>:80 otech2<id>@users.deterlab.net -N -f